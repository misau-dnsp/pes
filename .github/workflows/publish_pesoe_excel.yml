name: Generate PESOE Excel

on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *'  # Every day at 05:00 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: pesoe-excel-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for rebase/push reliability

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install system dependencies
        run: sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libgit2-dev

      - name: Install R packages
        run: |
          Rscript -e 'options(repos = c(CRAN = "https://cloud.r-project.org")); install.packages(c(
            "ggplot2", "tibble", "tidyr", "readr", "purrr", "dplyr", "stringr", "forcats",
            "ggthemes", "robotoolbox", "dm", "haven", "gt", "glue", "openxlsx", "scales", "lubridate"
          ))'

      - name: Ensure Dataout directory exists
        run: mkdir -p Dataout

      - name: Run script
        env:
          KOBO_TOKEN: ${{ secrets.KOBO_TOKEN }}
        run: Rscript Scripts/pesoe.R

      - name: Commit and push Excel file(s)
        shell: bash
        run: |
          set -euo pipefail

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          # Only stage .xlsx files if any exist; never try to add the folder itself.
          shopt -s nullglob
          files=(Dataout/*.xlsx)
          shopt -u nullglob

          if (( ${#files[@]} )); then
            git add -f -- "${files[@]}"
            # Keep the directory tracked + optional docs
            [ -f Dataout/.gitkeep ] && git add Dataout/.gitkeep || true
            [ -f Dataout/README.md ] && git add Dataout/README.md || true
          else
            echo "No .xlsx files found to stage."
          fi

          echo "Staged files:"
          git diff --cached --name-only || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "ci: update Excel outputs [skip ci]"
          # Rebase to minimize push rejects; ignore if nothing to rebase
          git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
          git push origin HEAD:main
