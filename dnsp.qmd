---
title: "Plano Económico Social 2026"
subtitle: "Direcção Nacional de Saúde Pública (MISAU)"
execute:
  echo: false
  warning: false
---

```{r, results='hide'}
library(tidyverse)
library(ggthemes)
library(robotoolbox)
library(glamr)
library(dm)
library(haven)
library(gt)
library(glue)
source("Scripts/utilities.R")

acct_kobo <- "kobo-jlara"
acct_kobo_con <- get_account(name = acct_kobo)

kobo_token(username = acct_kobo_con$username,
           password = acct_kobo_con$password,
           url = acct_kobo_con$url)

```

```{r load-kobo-data}

# timestamp for indicating data of data pull
dt <- today()

# fetch kobo assets using account credentials
assets <- kobo_asset_list()

uid <- assets %>%
  filter(name == "DNSP PES 2026 Final") %>%
  pull(uid) %>%
  first()

asset_list <- kobo_asset(uid)

asset_df <- kobo_submissions(asset_list)

rm(assets, asset_list, uid)

```


```{r echo: false, warning: false, message: false munge-data}

# df main for... only activity count at present
df_main <- asset_df$main %>%
  mutate(across(all_of(columns_to_label), as_factor))

# df dates for ...
df_dates <- asset_df$tbl_datas_impl

# df main & dates for gantt plot
df_main_dates <- asset_df %>%
  dm_flatten_to_tbl(.start = tbl_datas_impl,
                    .join = left_join) %>% 
    mutate(across(all_of(columns_to_label), as_factor)) %>% 
  select(
    responsavel_programa,
    subactividade_tipo,
    subactividade_titulo,
    subactividade_data_inicio,
    subactividade_data_fim
  ) %>% 
mutate(
  responsavel_programa = str_to_upper(responsavel_programa),
  data_inicio = subactividade_data_inicio,
  subactividade_titulo = subactividade_titulo |> 
    str_trunc(width = 100, ellipsis = "...") |> 
    str_wrap(width = 75),
  subactividade_titulo = factor(subactividade_titulo, levels = unique(subactividade_titulo))
  ) %>% 
  pivot_longer(
    cols = contains("_data_"),
    names_to = "data_tipo",
    values_to = "data"
  ) %>% 
  arrange(responsavel_programa, desc(data_inicio)) %>%
  mutate(
    subactividade_titulo = factor(
      subactividade_titulo,
      levels = unique(subactividade_titulo)
    )
  )

```

```{r calculate-values}

# count of subactivities
val_n_activities <- nrow(df_main)

# count of subactivities count by type
tbl_activities_type <- df_main %>%
  group_by(subactividade_tipo) %>%
  summarise(
    n = n(),
    across(
      c(calc_custo_total, financiamento_oe, financiamento_prosaude, financiamento_outro_total, calc_financiamento_lacuna),
      ~ sum(.x, na.rm = TRUE)
    ),
    .groups = "drop"
  ) %>%
  bind_rows(
    summarise(df_main,
      subactividade_tipo = "Total",

      n = n(),
      calc_custo_total = sum(calc_custo_total, na.rm = TRUE),
      financiamento_oe = sum(financiamento_oe, na.rm = TRUE),
      financiamento_prosaude = sum(financiamento_prosaude, na.rm = TRUE),
      financiamento_outro_total = sum(financiamento_outro_total, na.rm = TRUE),
      calc_financiamento_lacuna = sum(calc_financiamento_lacuna, na.rm = TRUE)
    )
  )

# count of subactivities count by program
tbl_activities_programa <- df_main %>%
  group_by(responsavel_programa) %>%
  summarise(
    n = n(),
    across(
      c(calc_custo_total, financiamento_oe, financiamento_prosaude, financiamento_outro_total, calc_financiamento_lacuna),
      ~ sum(.x, na.rm = TRUE)
    ),
    .groups = "drop"
  ) %>%
  bind_rows(
    summarise(df_main,
      responsavel_programa = "Total",
      n = n(),
      calc_custo_total = sum(calc_custo_total, na.rm = TRUE),
      financiamento_oe = sum(financiamento_oe, na.rm = TRUE),
      financiamento_prosaude = sum(financiamento_prosaude, na.rm = TRUE),
      financiamento_outro_total = sum(financiamento_outro_total, na.rm = TRUE),
      calc_financiamento_lacuna = sum(calc_financiamento_lacuna, na.rm = TRUE)
    )
  )

# sum of costs
val_cost_activities <- sum(df_main$calc_custo_total, na.rm = TRUE) %>% 
  format(big.mark = ".", decimal.mark = ",", nsmall = 0)

```

# Sumário Executivo

Como parte do Plano Económico e Social (PES) do ano 2026, a Direcção Nacional de Saúde Pública (DNSP) está a introduzir novas tecnologias para a recolha, análise e monitoria da execução das actividades planificadas. A intenção é de automatizar a gestão dos dados do PES e, desta forma, melhorar a planificação, monitoria, e execução em si. Até à data de criação do presente relatório (`r dt`), o pessoal do programa DNSP submetiu no KoboToolbox informações para `r val_n_activities` subactividades com um custo total de `r val_cost_activities` MT.

```{r plot-programa-table}

columns_gt_numeric <- tbl_activities_programa %>%
  select(where(is.numeric)) %>%
  colnames()

tbl_activities_programa %>%
  gt() %>%
 
  # General table options
  tab_options(
    table.font.names = c("Nunito Sans", "sans-serif"),
    table.align = "left"
  ) %>%
 
  # Column spanner
   tab_spanner(
    label = "Financiamento Previsto",
    columns = c(financiamento_oe, financiamento_prosaude, financiamento_outro_total)
  ) %>%
 
  # Spanner styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_spanners()
  ) %>%
 
  # Header styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_labels()
  ) %>%
 
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "left"),
    locations = cells_column_labels(columns = responsavel_programa)
  ) %>%
 
  # Body styles
  tab_style(
    style = cell_text(size = px(13), color = "#1C2826", align = "center"),
    locations = cells_body()
  ) %>%
 
  tab_style(
    style = cell_text(size = px(13), align = "left"),
    locations = cells_body(columns = responsavel_programa)
  ) %>%
 
    tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(rows = responsavel_programa == "Total")
  ) %>%

  # Column names
  cols_label(
    responsavel_programa = "Programa",
    n = "Qd.",
    calc_custo_total = "Custo",
    financiamento_oe = "OE",
    financiamento_prosaude = "ProSaude",
    financiamento_outro_total = "Outro",
    calc_financiamento_lacuna = "Lacuna"
  ) %>%
 
  # Column widths
  cols_width(
    responsavel_programa ~ px(200),
    n ~ px(60),
    calc_custo_total ~ px(75),
    financiamento_oe ~ px(75),
    financiamento_prosaude ~ px(75),
    financiamento_outro_total ~ px(75),
    calc_financiamento_lacuna ~ px(75)
  ) %>%
 
  # Number formatting
  fmt_number(
    columns = all_of(columns_gt_numeric),
    decimals = 0,
    sep_mark = ".",
    dec_mark = ","
  )

```

```{r plot-type-table}

columns_gt_numeric <- tbl_activities_type %>%
  select(where(is.numeric)) %>%
  colnames()

tbl_activities_type %>%
  gt() %>%
  
  # General table options
  tab_options(
    table.font.names = c("Nunito Sans", "sans-serif"),
    table.align = "left"
  ) %>%
  
  # Column spanner
   tab_spanner(
    label = "Financiamento Previsto",
    columns = c(financiamento_oe, financiamento_prosaude, financiamento_outro_total)
  ) %>% 
  
  # Spanner styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_spanners()
  ) %>% 
  
  # Header styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_labels()
  ) %>%
  
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "left"),
    locations = cells_column_labels(columns = subactividade_tipo)
  ) %>%
  
  # Body styles
  tab_style(
    style = cell_text(size = px(13), color = "#1C2826", align = "center"),
    locations = cells_body()
  ) %>% 
  
  tab_style(
    style = cell_text(size = px(13), align = "left"),
    locations = cells_body(columns = subactividade_tipo)
  ) %>% 
  
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(rows = subactividade_tipo == "Total")
  ) %>%

  # Column names
  cols_label(
    subactividade_tipo = "Tipo de Subactividade",
    n = "Qd.",
    calc_custo_total = "Custo",
    financiamento_oe = "OE",
    financiamento_prosaude = "ProSaude",
    financiamento_outro_total = "Outro",
    calc_financiamento_lacuna = "Lacuna"
  ) %>%
  
  # Column widths
  cols_width(
    subactividade_tipo ~ px(300),
    n ~ px(60),
    calc_custo_total ~ px(75),
    financiamento_oe ~ px(75),
    financiamento_prosaude ~ px(75),
    financiamento_outro_total ~ px(75),
    calc_financiamento_lacuna ~ px(75)
  ) %>%
  
  # Number formatting
  fmt_number(
    columns = all_of(columns_gt_numeric),
    decimals = 0,
    sep_mark = ".",
    dec_mark = ","
  )

```

A fim de monitorar a execução atempada das actividades planificadas ao longo de 2026, a equipa de M&A da UMA criou uma diagrama Gantt que os gestores de programas e a direcção podem utilizar para verificar o estado das actividades.  Esta visualização será actualizada cada mes ou trimestre (periodicadade por defenir) com base nas informações fornecidas pelos responsáveis de M&A da área do programa em ligação com a UMA

```{r plot-activity-gantt, fig.width=12, fig.height=4, fig.align='center', fig.bg="transparent"}

# plot activity gantt chart
plot_gantt <- ggplot(df_main_dates) +
  geom_line(
    aes(x = subactividade_titulo, y = data),
    color = "#2780e3",
    linewidth = 4,
    lineend = "butt",
    linejoin = "mitre"
  ) +
  scale_y_date(
    date_breaks = "1 month",
    date_labels = "%m-%Y"
  ) +
  coord_flip() +
  facet_wrap(~ responsavel_programa, ncol = 1, scales = "free_y") +
  theme_fivethirtyeight() +
  labs(
    title = "Cronograma de Actividades PES 2026 (DNSP)",
    caption = "Fonte: DNSP KoboToolbox",
    x = NULL,
    y = "Date"
  ) +
  theme(
    plot.title = element_text(size = 15, face = "italic", hjust = 0),
    plot.caption = element_text(margin = margin(t = 10), size = 12, hjust = 1, face = "italic"),
    legend.position = "none",
    axis.text.x = element_text(size = 13, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 13),
    panel.spacing = unit(0.5, "lines"),
    panel.grid.minor.x = element_blank(),
    strip.background = element_rect(fill = "grey100", color = "grey20"),
    strip.text = element_text(color = "grey20", 
                              face = "bold", 
                              size = 11,
                              margin = margin(t = 3, b = 3)
    )
  )

plot_gantt
```
