---
title: "Plano Económico Social 2026"
format:
  html:
    title-block: true
    toc: true
    theme: cosmo
execute:
  echo: false
  warning: false
  message: false
---

```{r, load-dependencies}

library(dplyr)
library(tidyr)
library(readr)
library(ggplot2)
library(stringr)
library(tibble)
library(purrr)
library(forcats)
library(lubridate)
library(ggthemes)
library(robotoolbox)
library(dm)
library(haven)
library(gt)
library(glue)


```

```{r, load-global-variables}

# variable vector for kobo label substitution
columns_to_label <- c("responsavel_programa", 
                      "responsavel_pf_ma", 
                      "subactividade_tipo", 
                      "objectivo_especifico", 
                      "objectivo_pess", 
                      "subactividade_local")

gen_tbl_activities <- function(df, breakdown = "subactividade_tipo") {
  # Use tidy evaluation for grouping
  group_var <- sym(breakdown)
  
  df_summary <- df %>%
    group_by(!!group_var) %>%
    summarise(
      n = n(),
      across(
        c(calc_custo_total, financiamento_oe, financiamento_prosaude,
          financiamento_outro_total, calc_financiamento_lacuna),
        ~ sum(as.numeric(.x), na.rm = TRUE),
        .names = "{.col}"
      ),
      .groups = "drop"
    ) %>% 
    arrange(desc(calc_custo_total))
  
  df_total <- df %>%
    summarise(
      !!group_var := "Total",
      n = n(),
      calc_custo_total = sum(as.numeric(calc_custo_total), na.rm = TRUE),
      financiamento_oe = sum(as.numeric(financiamento_oe), na.rm = TRUE),
      financiamento_prosaude = sum(as.numeric(financiamento_prosaude), na.rm = TRUE),
      financiamento_outro_total = sum(as.numeric(financiamento_outro_total), na.rm = TRUE),
      calc_financiamento_lacuna = sum(as.numeric(calc_financiamento_lacuna), na.rm = TRUE)
    )
  
  bind_rows(df_summary, df_total)
}

gen_tbl_financiador <- function(df, breakdown = financiador_detalhe) {
  
  df %>%
    group_by({{ breakdown }}) %>%
    summarise(
      n = n(),
      financiamento = sum(valor, na.rm = TRUE),
      .groups = "drop"
    ) %>%
    arrange(desc(financiamento)) %>% 
    bind_rows(
      df %>%
        summarise(
          {{ breakdown }} := "Total",
          n = n(),
          financiamento = sum(valor, na.rm = TRUE)
        )
    )
}

```


```{r load-kobo-creds}

Sys.setenv(KOBOTOOLBOX_URL = "https://eu.kobotoolbox.org")
Sys.setenv(KOBOTOOLBOX_TOKEN = Sys.getenv("KOBO_TOKEN"))

kobo_setup(
  url = Sys.getenv("KOBOTOOLBOX_URL"),
  token = Sys.getenv("KOBOTOOLBOX_TOKEN")
)


```


```{r load-kobo-data}

# timestamp of data pull
dt <- today()

# acquire kobo assets
assets <- kobo_asset_list()

uid <- assets %>%
  filter(name == "DNSP PES 2026 Final v3") %>%
  pull(uid) %>% first()

asset <- kobo_asset(uid)

asset_df <- kobo_submissions(asset)

# remove unneeded items
rm(assets, asset, uid)

```


```{r  munge-data}

# df main for... only activity count at present
df_main <- asset_df$main %>%
  mutate(across(all_of(columns_to_label), as_factor))

# df dates for ...
df_dates <- asset_df$tbl_datas_impl

# df main & dates for gantt plot
df_main_dates <- asset_df %>%
  dm_flatten_to_tbl(.start = tbl_datas_impl,
                    .join = left_join) %>% 
  mutate(across(all_of(columns_to_label), as_factor)) %>% 
  select(
    responsavel_programa,
    subactividade_tipo,
    subactividade_titulo,
    subactividade_data_inicio,
    subactividade_data_fim
  ) %>% 
  mutate(
    #responsavel_programa = str_to_upper(responsavel_programa),
    data_inicio = subactividade_data_inicio,
    subactividade_titulo = subactividade_titulo %>% str_trunc(width = 100, ellipsis = "...") %>% str_wrap(width = 75),
    subactividade_titulo = factor(subactividade_titulo, levels = unique(subactividade_titulo)),
    subactividade_programa_conc = paste0(subactividade_titulo, " (", responsavel_programa, ")"),
    subactividade_programa_conc = fct_reorder(subactividade_programa_conc, subactividade_data_inicio, .desc = TRUE),
    subactividade_data_fim_corrigida = if_else(
      subactividade_data_inicio == subactividade_data_fim,
      subactividade_data_fim + 1,  # Add 1 day
      subactividade_data_fim
    ))

ordering_lookup <- df_main_dates %>%
  group_by(subactividade_programa_conc) %>%
  summarise(min_start = min(subactividade_data_inicio, na.rm = TRUE), .groups = "drop")

# Join back and reorder the factor
df_main_dates <- df_main_dates %>%
  left_join(ordering_lookup, by = "subactividade_programa_conc") %>%
  mutate(subactividade_programa_conc = fct_reorder(subactividade_programa_conc, min_start, .desc = TRUE))  # or .desc = FALSE for earliest on top

# df main & fianciamento_outro for tables
df_main_financ <- asset_df %>%
  dm_flatten_to_tbl(.start = tbl_financiamento_outro,
                    .join = left_join) %>% 
  
  mutate(across(all_of(columns_to_label), as_factor)) %>% 
  
  select(c(columns_to_label),
         starts_with("financiamento_"),
         -all_of(starts_with(c("financiamento_outro_especificacao_fonte_", 
                               "financiamento_outro_total.")))) %>% 
  pivot_longer(cols = c(financiamento_oe,
                        financiamento_prosaude,
                        financiamento_outro),
               names_to = "financiador",
               values_to = "valor") %>% 
  filter(valor > 0) %>% 
  mutate(financiamento_outro_especificacao = str_remove_all(financiamento_outro_especificacao, "fonte_"),
         financiador = str_remove_all(financiador, "financiamento_"),
         financiador = case_when(financiador == "oe" ~ "OE",
                                 financiador == "prosaude" ~ "ProSaude",
                                 financiador == "outro" ~ "Outro",
                                 .default = financiador),
         financiador_detalhe = case_when(financiador == "OE" ~ financiador,
                                         financiador == "ProSaude" ~ financiador,
                                         financiamento_outro_especificacao == "banco_mundial" ~ "Banco Mundial",
                                         financiamento_outro_especificacao == "cdc" ~ "CDC/COAG",
                                         financiamento_outro_especificacao == "fdc" ~ "FDC",
                                         financiamento_outro_especificacao == "fnuap" ~ "FNUAP",
                                         financiamento_outro_especificacao == "fundo_global" ~ "Fundo Global",
                                         financiamento_outro_especificacao == "gavi" ~ "GAVI",
                                         financiamento_outro_especificacao == "oim" ~ "OIM",
                                         financiamento_outro_especificacao == "oms" ~ "OMS",
                                         financiamento_outro_especificacao == "pepfar_1" ~ "PEPFAR",
                                         financiamento_outro_especificacao == "prosaude" ~ "ProSaude",
                                         financiamento_outro_especificacao == "rti" ~ "RTI",
                                         financiamento_outro_especificacao == "unicef" ~ "UNICEF",
                                         financiamento_outro_especificacao == "outros" ~ "Outra",
                                         .default = financiador)
  ) %>% 
  select(-starts_with("financiamento_outro")) %>% 
  relocate(valor, .after = everything())


```

```{r calculate-values}

# count of subactivities
val_n_activities <- nrow(df_main)

# summary tables by type, program, and donor
tbl_activities_type <- gen_tbl_activities(df_main)
tbl_activities_programa <- gen_tbl_activities(df_main, breakdown = "responsavel_programa")
tbl_financiamento_financiador <- gen_tbl_financiador(df_main_financ)


# sum of costs
val_cost_activities <- sum(df_main$calc_custo_total, na.rm = TRUE) %>% 
  format(big.mark = ".", decimal.mark = ",", nsmall = 0)


```

### Sumário da Actividades

O Plano Económico e Social (PES) do Ministério da Saúde é o principal instrumento anual de operacionalização das prioridades do sector da saúde em Moçambique. Através do PES, transformam-se políticas e estratégias nacionais em actividades concretas, calendarizadas, orçamentadas e atribuídas a responsáveis claros. A Direcção Nacional de Saúde Pública (DNSP) desempenha um papel central no PES, coordenando o planeamento das subactividades dos seus vários programas (como Nutrição, PAV, COESP, entre outros). Cada programa propõe as suas intervenções e, em articulação com a liderança da DNSP assegura que as propostas estejam alinhadas com as prioridades nacionais, identifique sinergias entre programas e oriente eventuais revisões para promover maior integração e impacto do Plano. Ao longo do ano, a DNSP acompanha a execução do PES utilizando as subactividades como base para monitorar a implementação e a utilização de recursos.

Até ao dia em que este relatório foi elaborado (`r dt`), o pessoal do programa da DNSP tinha proposto um total de `r val_n_activities` actividades para o ano de 2026.  O custo total dessas actividades, de acordo com as estimativas de custos fornecidas pelos programas que as propõem, é de `r val_cost_activities` MT. A tabela abaixo resume o número e o custo das subactividades propostas por cada programa do DNSP que introduziu dados na plataforma KoboToolbox utilizada para o planeamento do PES do DNSP. O programa com o maior orçamento proposto é o `r tbl_activities_programa$responsavel_programa[which.max(tbl_activities_programa$calc_custo_total[tbl_activities_programa$responsavel_programa != "Total"])]`, com um total estimado de `r scales::comma(max(tbl_activities_programa$calc_custo_total[tbl_activities_programa$responsavel_programa != "Total"], na.rm = TRUE), big.mark = ".", decimal.mark = ",")` MT. O programa com o maior número de actividades propostas é o `r tbl_activities_programa$responsavel_programa[which.max(tbl_activities_programa$n[tbl_activities_programa$responsavel_programa != "Total"])]`, com `r max(tbl_activities_programa$n[tbl_activities_programa$responsavel_programa != "Total"], na.rm = TRUE)` subactividades.


```{r plot-programa-table}

columns_gt_numeric <- tbl_activities_programa %>%
  select(where(is.numeric)) %>%
  colnames()

tbl_activities_programa %>%
  gt() %>%
 
  # General table options
  tab_options(
    table.font.names = c("Nunito Sans", "sans-serif"),
    table.align = "left",
    table.width = pct(80)
  ) %>%
 
  # Column spanner
   tab_spanner(
    label = "Financiamento Previsto",
    columns = c(financiamento_oe, financiamento_prosaude, financiamento_outro_total)
  ) %>%
 
  # Spanner styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_spanners()
  ) %>%
 
  # Header styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_labels()
  ) %>%
 
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "left"),
    locations = cells_column_labels(columns = responsavel_programa)
  ) %>%
 
  # Body styles
  tab_style(
    style = cell_text(size = px(13), color = "#1C2826", align = "center"),
    locations = cells_body()
  ) %>%
 
  tab_style(
    style = cell_text(size = px(13), align = "left"),
    locations = cells_body(columns = responsavel_programa)
  ) %>%
 
    tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(rows = responsavel_programa == "Total")
  ) %>%

  # Column names
  cols_label(
    responsavel_programa = "Programa",
    n = "Qd.",
    calc_custo_total = "Custo",
    financiamento_oe = "OE",
    financiamento_prosaude = "ProSaude",
    financiamento_outro_total = "Outro",
    calc_financiamento_lacuna = "Lacuna"
  ) %>%
 
  # Column widths
  cols_width(
    responsavel_programa ~ px(300),
    n ~ px(75),
    calc_custo_total ~ px(100),
    financiamento_oe ~ px(100),
    financiamento_prosaude ~ px(100),
    financiamento_outro_total ~ px(100),
    calc_financiamento_lacuna ~ px(100)
  ) %>%
 
  # Number formatting
  fmt_number(
    columns = all_of(columns_gt_numeric),
    decimals = 0,
    sep_mark = ".",
    dec_mark = ","
  )


```

A tabela abaixo apresenta um resumo das subactividades propostas organizadas por tipo de intervenção. Para cada tipo de subactividade, é indicado o número total de actividades propostas, o custo total estimado, bem como a distribuição das fontes de financiamento previstas — incluindo fundos do Orçamento do Estado (OE), ProSaude e outras fontes externas. A coluna final representa a lacuna de financiamento, ou seja, a diferença entre o custo total estimado e os fundos já identificados. A linha final da tabela agrega os totais de todas as subactividades registadas até à data, permitindo uma visão consolidada. O tipo de subactividade com o maior orçamento total proposto é `r tbl_activities_type$subactividade_tipo[which.max(tbl_activities_type$calc_custo_total[tbl_activities_type$subactividade_tipo != "Total"])]`, com um custo estimado de `r scales::comma(max(tbl_activities_type$calc_custo_total[tbl_activities_type$subactividade_tipo != "Total"], na.rm = TRUE), big.mark = ".", decimal.mark = ",")` MT. O tipo com o maior número de actividades propostas é `r tbl_activities_type$subactividade_tipo[which.max(tbl_activities_type$n[tbl_activities_type$subactividade_tipo != "Total"])]`, com `r max(tbl_activities_type$n[tbl_activities_type$subactividade_tipo != "Total"], na.rm = TRUE)` subactividades.


```{r plot-type-table}

columns_gt_numeric <- tbl_activities_type %>%
  select(where(is.numeric)) %>%
  colnames()

tbl_activities_type %>%
  gt() %>%
  
  # General table options
  tab_options(
    table.font.names = c("Nunito Sans", "sans-serif"),
    table.align = "left",
    table.width = pct(80)
  ) %>%
  
  # Column spanner
   tab_spanner(
    label = "Financiamento Previsto",
    columns = c(financiamento_oe, financiamento_prosaude, financiamento_outro_total)
  ) %>% 
  
  # Spanner styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_spanners()
  ) %>% 
  
  # Header styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_labels()
  ) %>%
  
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "left"),
    locations = cells_column_labels(columns = subactividade_tipo)
  ) %>%
  
  # Body styles
  tab_style(
    style = cell_text(size = px(13), color = "#1C2826", align = "center"),
    locations = cells_body()
  ) %>% 
  
  tab_style(
    style = cell_text(size = px(13), align = "left"),
    locations = cells_body(columns = subactividade_tipo)
  ) %>% 
  
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(rows = subactividade_tipo == "Total")
  ) %>%

  # Column names
  cols_label(
    subactividade_tipo = "Tipo de Subactividade",
    n = "Qd.",
    calc_custo_total = "Custo",
    financiamento_oe = "OE",
    financiamento_prosaude = "ProSaude",
    financiamento_outro_total = "Outro",
    calc_financiamento_lacuna = "Lacuna"
  ) %>%
  
  # Column widths
  cols_width(
    subactividade_tipo ~ px(300),
    n ~ px(75),
    calc_custo_total ~ px(100),
    financiamento_oe ~ px(100),
    financiamento_prosaude ~ px(100),
    financiamento_outro_total ~ px(100),
    calc_financiamento_lacuna ~ px(100)
  ) %>%
  
  # Number formatting
  fmt_number(
    columns = all_of(columns_gt_numeric),
    decimals = 0,
    sep_mark = ".",
    dec_mark = ","
  )


```


Visualizar o financiamento proposto permite compreender de forma imediata como diferentes fontes estão a contribuir para a implementação das actividades planificadas no PES. A tabela abaixo apresenta o número de contribuições feitas por cada financiador (ou seja, quantas vezes essa fonte foi indicada para financiar as subactividade) e o respectivo montante total previsto. Esta informação ajuda a identificar desequilíbrios, dependências e oportunidades de reprogramação ou mobilização de fundos. Foram registadas `r sum(tbl_financiamento_financiador$n[tbl_financiamento_financiador$financiador_detalhe != "Total"], na.rm = TRUE)` contribuições de financiamento. Os três principais financiadores em termos de montante são: `r tbl_financiamento_financiador$financiador_detalhe[order(tbl_financiamento_financiador$financiamento[tbl_financiamento_financiador$financiador_detalhe != "Total"], decreasing = TRUE)][1]`, `r tbl_financiamento_financiador$financiador_detalhe[order(tbl_financiamento_financiador$financiamento[tbl_financiamento_financiador$financiador_detalhe != "Total"], decreasing = TRUE)][2]` e `r tbl_financiamento_financiador$financiador_detalhe[order(tbl_financiamento_financiador$financiamento[tbl_financiamento_financiador$financiador_detalhe != "Total"], decreasing = TRUE)][3]`. A fonte com o menor volume de financiamento total até agora é `r tbl_financiamento_financiador$financiador_detalhe[which.min(tbl_financiamento_financiador$financiamento[tbl_financiamento_financiador$financiador_detalhe != "Total"])]`, com apenas `r scales::comma(min(tbl_financiamento_financiador$financiamento[tbl_financiamento_financiador$financiador_detalhe != "Total"], na.rm = TRUE), big.mark = ".", decimal.mark = ",")` MT atribuídos.


```{r plot-financiamento-table}

columns_gt_numeric <- tbl_financiamento_financiador %>%
  select(where(is.numeric)) %>%
  colnames()

tbl_financiamento_financiador %>% 
  gt() %>% 
  # General table options
  tab_options(
    table.font.names = c("Nunito Sans", "sans-serif"),
    table.align = "left",
    table.width = pct(40)
  ) %>%
  
  # Header styles
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "center"),
    locations = cells_column_labels()
  ) %>%
  
  tab_style(
    style = cell_text(size = px(13), weight = "bold", align = "left"),
    locations = cells_column_labels(columns = financiador_detalhe)
  ) %>%
  
  # Body styles
  tab_style(
    style = cell_text(size = px(13), color = "#1C2826", align = "center"),
    locations = cells_body()
  ) %>% 
  
  tab_style(
    style = cell_text(size = px(13), align = "left"),
    locations = cells_body(columns = financiador_detalhe)
  ) %>% 
  
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(rows = financiador_detalhe == "Total")
  ) %>%
  
  # Column names
  cols_label(
    financiador_detalhe = "Financiador",
    n = "Qd.",
    financiamento = "Financiamento"
  ) %>%
  
  # Column widths
  cols_width(
    financiador_detalhe ~ px(100),
    n ~ px(75),
    financiamento ~ px(100)
  ) %>%
  
  # Number formatting
  fmt_number(
    columns = all_of(columns_gt_numeric),
    decimals = 0,
    sep_mark = ".",
    dec_mark = ","
  )


```

### Calendário de Execução

A Unidade de Monitoria e Avaliação (UMA) da DNSP criou o diagrama de Gantt abaixo, que pode ser utilizado para compreender a coerência do conjunto de actividades propostas.  Uma vez concluído, este gráfico pode servir de base para acompanhar a execução atempada das actividades da DNSP.  Como parte da estratégia global de monitoria, a UMA pretende coordenar com os contrapartes de M&A ao nível dos programas para actualizar este gráfico em cada trimestre, a fim de mostrar o que foi concluído, está em curso, ou ainda pendente, reprogramado ou cancelado.

```{r plot-activity-gantt, fig.width=12, fig.height=4, fig.align='center', fig.bg="transparent"}

# plot activity gantt chart
plot_gantt <- ggplot(df_main_dates) +
  geom_segment(
    aes(
      x = subactividade_programa_conc,
      xend = subactividade_programa_conc,
      y = subactividade_data_inicio,
      yend = subactividade_data_fim_corrigida
    ),
    color = "#2780e3", 
    linewidth = 4,
    lineend = "butt"
  ) +
  scale_y_date(
    date_breaks = "1 month",
    date_labels = "%m-%Y"
  ) +
  coord_flip() +
  labs(
    title = "Cronograma de Actividades PES 2026 (DNSP)",
    caption = "Fonte: DNSP KoboToolbox",
    x = NULL,
    y = NULL,
    color = "Programa"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    panel.background = element_rect(fill = NA, color = NA),
    plot.background = element_rect(fill = NA, color = NA),
    legend.background = element_rect(fill = NA, color = NA),
    legend.box.background = element_rect(fill = NA, color = NA),
    plot.title = element_text(size = 15, face = "italic", hjust = 0),
    plot.caption = element_text(margin = margin(t = 10), size = 12, hjust = 1, face = "italic"),
    legend.position = "right",
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12)
  )

plot_gantt


```


### Histórico de Versões do PESOE e Tabelas Relacionadas

Um histórico de versões das tabelas Excel geradas diariamente com a informação da KoboToolbox está disponível abaixo.  Cada download contém folhas separadas para o PESOE, o Plano de Formação e o Quadro de Despesas.

```{r historical-download}
# List all Excel files in the Dataout folder
files <- list.files("Dataout", pattern = "^dnsp_pes_\\d{4}-\\d{2}-\\d{2}\\.xlsx$", full.names = TRUE)

file_info <- tibble(
  file = files,
  name = basename(files),
  date = as.Date(str_extract(basename(files), "\\d{4}-\\d{2}-\\d{2}"))
) %>%
  arrange(desc(date)) %>%
  mutate(link = glue("[⬇️ Download](/Dataout/{name})"))

file_info %>%
  select(`Data do Ficheiro` = date, `Nome do Ficheiro` = name, `Download` = link) %>%
  gt()
```

